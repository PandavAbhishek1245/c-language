{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx867\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*************************3*3 multiplication table********************************/\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
#include<stdio.h>    \
 \
int main()\
\{  \
   int a[10][10][10],b[10][10][10],mul[10][10][10],r,c,i,j,d,k,f;\
\
   printf("enter the number of row=");    \
   scanf("%d",&r);  \
   \
   printf("enter the number of column=");    \
   scanf("%d",&c); \
   \
   printf("enter the number of column=");    \
   scanf("%d",&f); \
   \
   printf("enter the first matrix element =\\n");\
   \
   for(i=0;i<r;i++)    \
   \{    \
        for(j=0;j<c;j++)    \
       \{    \
           for(k=0; k<f; k++)\
           \{\
               scanf("%d",&a[i][j][k]);    \
           \}\
            \
        \}    \
    \} \
    \
    printf("enter the second matrix element=\\n");  \
    \
   for(i=0;i<r;i++)    \
   \{    \
      for(j=0;j<c;j++)    \
      \{    \
          for(k=0; k<f; k++)\
          \{\
            scanf("%d",&b[i][j][k]); \
          \}\
      \}    \
   \}    \
    \
      printf("multiply of the matrix=\\n");    \
      \
    for(i=0;i<r;i++)    \
    \{    \
        for(j=0;j<c;j++)    \
       \{   \
           for(k=0; k<f; k++)\
           \{\
              mul[i][j][k]=0;    \
              for(d=0;d<c;d++)    \
             \{    \
              mul[i][j][k]+=a[i][d][k]*b[d][j][k];    \
              \}    \
    \
           \}\
       \}   \
    \}    \
 \
   for(i=0;i<r;i++)    \
   \{    \
      for(j=0;j<c;j++)    \
      \{   \
          for(k=0; k<f; k++)\
          \{\
             printf("%d\\t",mul[i][j][k]);    \
          \} \
          \
      \}   \
       printf("\\n");    \
   \}    \
return 0;  \
\}  \
}